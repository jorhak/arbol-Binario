/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Presentacion;

import Arboles.*;
import Datos.*;
import Logica.*;
import java.awt.Color;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Abdias
 */
public class FArboles extends javax.swing.JFrame {

    /**
     * Creates new form FArboles
     */


    public FArboles() {
        initComponents();

        mostrar("");
        inhabilitar();
        binario = new ArbolBinarioBusqueda<>();
        avl = new ArbolAVLBusqueda<>();
        mvias = new ArbolMViasBusqueda<>();

        con = new DataBase();
        dic = new DDiccionario();
        instancia = new LDiccionario();
    }

    public void habilitar(){
        txtIdDiccionario.setEnabled(true);
        txtPalabra.setEnabled(true);
        txtDescripcion.setEnabled(true);
        txtEjemplo.setEnabled(true);
        btnEditar.setEnabled(true);
        btnGuardar.setEnabled(true);

        txtIdDiccionario.setText("");
        txtPalabra.setText("");
        txtDescripcion.setText("");
        txtEjemplo.setText("");

        btnEliminar.setEnabled(true);
    }

    public void habilitar1(){
        txtIdDiccionario.setEnabled(true);
        txtPalabra.setEnabled(true);
        txtDescripcion.setEnabled(true);
        txtEjemplo.setEnabled(true);
        btnEditar.setEnabled(true);
        btnGuardar.setEnabled(true);



        btnEliminar.setEnabled(true);
    }

    public void inhabilitar(){
        txtIdDiccionario.setEnabled(false);
        txtPalabra.setEnabled(false);
        txtDescripcion.setEnabled(false);
        txtEjemplo.setEnabled(false);
        btnEditar.setEnabled(false);
        btnGuardar.setEnabled(false);

        btnEliminar.setEnabled(false);
    }

    public void mostrar(String buscar){
        try {
            DefaultTableModel modelo;
            LDiccionario dic = new LDiccionario();
            modelo = dic.mostrar(buscar);
            tbPalabras.setModel(modelo);
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(rootPane, e);
        }
    }

    public boolean validar(){
        if(txtIdDiccionario.getText().length() == 0){
            JOptionPane.showConfirmDialog(rootPane, "Debe ingresar Id Diccionario");
            return false;
        }
        if(txtPalabra.getText().length() == 0){
            JOptionPane.showConfirmDialog(rootPane, "Debe ingresar una Palabra");
            return false;
        }
        if(txtDescripcion.getText().length() == 0){
            JOptionPane.showConfirmDialog(rootPane, "Debe ingresar la Descripcion");
            return false;
        }
        if(txtEjemplo.getText().length() == 0){
            JOptionPane.showConfirmDialog(rootPane, "Debe ingresar un Ejemplo");
            return false;
        }
        return true;
    }
    public void cargar(DDiccionario dic){
        txtIdDiccionario.setText(String.valueOf(dic.getIdDiccionario()));
        txtPalabra.setText(dic.getPalabra());
        txtDescripcion.setText(dic.getDescripcion());
        txtEjemplo.setText(dic.getEjemplo());
    }

    public void seleccionar(){
        String elemento = txtBuscarPalabra.getText();
        for(int i = 0; i<tbPalabras.getRowCount(); i++ ){
            if(tbPalabras.getValueAt(i, 0).equals(elemento)){
                tbPalabras.changeSelection(i, 0, false, false);
                break;
            }
        }
    }

    public void convertirAMayusculasJTextField(javax.swing.JTextField jTextFields){
        String cadena = jTextFields.getText().toUpperCase();
        jTextFields.setText(cadena);
    }

    public void convertirAMayusculasJTextArea(javax.swing.JTextArea jTextAreas){
        String cadena = jTextAreas.getText().toUpperCase();
        jTextAreas.setText(cadena);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtIdDiccionario = new javax.swing.JTextField();
        txtPalabra = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtEjemplo = new javax.swing.JTextArea();
        btnNuevo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtBuscarPalabra = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbPalabras = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtDefinicion = new javax.swing.JTextArea();
        cmbElegirArbol = new javax.swing.JComboBox();
        btnCargarArbol = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 239, 29));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(100, 100));
        setUndecorated(true);
        setSize(new java.awt.Dimension(0, 0));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Registro de Diccionario"));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Id Diccionario");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Palabra");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Descripcion");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Ejemplo");

        txtPalabra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPalabraActionPerformed(evt);
            }
        });
        txtPalabra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPalabraKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPalabraKeyTyped(evt);
            }
        });

        txtDescripcion.setColumns(20);
        txtDescripcion.setLineWrap(true);
        txtDescripcion.setRows(5);
        txtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDescripcionKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txtDescripcion);

        txtEjemplo.setColumns(20);
        txtEjemplo.setLineWrap(true);
        txtEjemplo.setRows(5);
        txtEjemplo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEjemploKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(txtEjemplo);

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPalabra, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                            .addComponent(txtIdDiccionario)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(btnNuevo, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnEditar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnGuardar))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIdDiccionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnEditar)
                    .addComponent(btnNuevo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(102, 102, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Listado de Palabra"));

        txtBuscarPalabra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarPalabraKeyReleased(evt);
            }
        });

        jLabel5.setText("Buscar:");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        btnSalir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSalirKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                btnSalirKeyReleased(evt);
            }
        });

        tbPalabras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tbPalabras);

        jPanel3.setBackground(new java.awt.Color(0, 204, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Definicion"));

        txtDefinicion.setColumns(20);
        txtDefinicion.setLineWrap(true);
        txtDefinicion.setRows(5);
        jScrollPane4.setViewportView(txtDefinicion);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
        );

        cmbElegirArbol.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione un arbol", "Arbol Binario", "Arbol AVL", "Arbol MVias", "Arbol B" }));
        cmbElegirArbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbElegirArbolActionPerformed(evt);
            }
        });

        btnCargarArbol.setText("Cargar Arbol");
        btnCargarArbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarArbolActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscarPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnBuscar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEliminar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(btnCargarArbol)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(cmbElegirArbol, 0, 134, Short.MAX_VALUE))
                                .addContainerGap())))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalir)
                        .addGap(22, 22, 22))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(btnCargarArbol)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtBuscarPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(btnEliminar)
                    .addComponent(cmbElegirArbol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(btnSalir)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void cmbElegirArbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbElegirArbolActionPerformed

    }//GEN-LAST:event_cmbElegirArbolActionPerformed

    private void btnCargarArbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarArbolActionPerformed
        if("Arbol Binario" == cmbElegirArbol.getSelectedItem()){
            Connection conexion = con.getConexion();
            try {
                Statement stm = conexion.createStatement();
                ResultSet rs = stm.executeQuery("Select* from diccionario");
                while(rs.next()){
                    dic = new DDiccionario(rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4));
                    binario.insertar(dic);
                    dic = null;
                }
            } catch (Exception e) {
                JOptionPane.showConfirmDialog(rootPane, e);
            }
        }
        if("Arbol AVL" == cmbElegirArbol.getSelectedItem()){
            Connection conexion = con.getConexion();
            try {
                Statement stm = conexion.createStatement();
                ResultSet rs = stm.executeQuery("Select* from diccionario");
                while(rs.next()){
                    dic = new DDiccionario(rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4));
                    avl.insertar(dic);
                    dic = null;
                }
            } catch (Exception e) {
                JOptionPane.showConfirmDialog(rootPane, e);
            }
        }
        if("Arbol MVias" == cmbElegirArbol.getSelectedItem()){
            Connection conexion = con.getConexion();
            try {
                Statement stm = conexion.createStatement();
                ResultSet rs = stm.executeQuery("Select* from diccionario");
                while(rs.next()){
                    dic = new DDiccionario(rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4));
                    mvias.insertar(dic);
                    dic = null;
                }
            } catch (Exception e) {
                JOptionPane.showConfirmDialog(rootPane, e);
            }
        }
        if("Arbol B" == cmbElegirArbol.getSelectedItem()){
            Connection conexion = con.getConexion();
            try {
                Statement stm = conexion.createStatement();
                ResultSet rs = stm.executeQuery("Select* from diccionario");
                while(rs.next()){
                    dic = new DDiccionario(rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4));
                    b.insertar(dic);
                    dic = null;
                }
            } catch (Exception e) {
                JOptionPane.showConfirmDialog(rootPane, e);
            }
        }
    }//GEN-LAST:event_btnCargarArbolActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        
        DDiccionario palabraABuscar = new DDiccionario();
        DDiccionario palabraEncontrada = new DDiccionario();
        if(binario!=null || avl!=null || mvias!=null|| b!=null){
            if("Arbol Binario"==cmbElegirArbol.getSelectedItem()){
                palabraABuscar.setPalabra(txtBuscarPalabra.getText());
                palabraEncontrada = binario.buscar(palabraABuscar);
                if(palabraEncontrada!= null && palabraABuscar.compareTo(palabraEncontrada)==0){
                    txtDefinicion.setText("SIGNIFICADO: "+palabraEncontrada.getDescripcion()+ "\n" + "EJEMPLO: " + palabraEncontrada.getEjemplo()+ "\n"+"Arbol Binario");
                    cargar(palabraEncontrada);
                    habilitar1();
                    tbPalabras.setSelectionBackground(Color.GREEN);
                    seleccionar();
                }else{
                    JOptionPane.showMessageDialog(rootPane, "No se encontro la palabra en el Diccionario");
                }
            }else{
                if("Arbol AVL"==cmbElegirArbol.getSelectedItem()){
                    palabraABuscar.setPalabra(txtBuscarPalabra.getText());
                    palabraEncontrada = avl.buscar(palabraABuscar);
                    if(palabraABuscar.compareTo(palabraEncontrada)==0){
                        txtDefinicion.setText("SIGNIFICADO: "+palabraEncontrada.getDescripcion()+ "\n" + "EJEMPLO: " + palabraEncontrada.getEjemplo()+ "\n"+"Arbol AVL");
                        cargar(palabraEncontrada);
                        habilitar1();
                        tbPalabras.setSelectionBackground(Color.RED);
                        seleccionar();
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "No se encontro la palabra en el Diccionario");
                    }
                }else{
                    if("Arbol MVias"==cmbElegirArbol.getSelectedItem()){
                        palabraABuscar.setPalabra(txtBuscarPalabra.getText());
                        palabraEncontrada = mvias.buscar(palabraABuscar);
                        if(palabraABuscar.compareTo(palabraEncontrada)==0){
                            txtDefinicion.setText("SIGNIFICADO: "+palabraEncontrada.getDescripcion()+ "\n" + "EJEMPLO: " + palabraEncontrada.getEjemplo()+ "\n"+"Arbol MVias");
                            cargar(palabraEncontrada);
                            habilitar1();
                            btnEditar.setEnabled(true);
                            tbPalabras.setSelectionBackground(Color.PINK);
                            seleccionar();
                        }else{
                            JOptionPane.showMessageDialog(rootPane, "No se encontro la palabra en el Diccionario");
                        }
                    }else{
                        if("Arbol B"==cmbElegirArbol.getSelectedItem()){
                            palabraABuscar.setPalabra(txtBuscarPalabra.getText());
                            palabraEncontrada = b.buscar(palabraABuscar);
                            if(palabraABuscar.compareTo(palabraEncontrada)==0){
                                txtDefinicion.setText("SIGNIFICADO: "+palabraEncontrada.getDescripcion()+ "\n" + "EJEMPLO: " + palabraEncontrada.getEjemplo() + "\n"+"Arbol B");
                                cargar(palabraEncontrada);
                                habilitar1();
                                btnEditar.setEnabled(true);
                                tbPalabras.setSelectionBackground(Color.darkGray);
                                seleccionar();
                            }else{
                                JOptionPane.showMessageDialog(rootPane, "No se encontro la palabra en el Diccionario");
                            }
                        }else{
                            JOptionPane.showMessageDialog(rootPane, "Debe cargar el arbol");
                        }
                    }
                }
            }
            //txtPalabra.setEnabled(false);
        }
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        habilitar();
        btnEditar.setEnabled(false);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        if("Arbol Binario"==cmbElegirArbol.getSelectedItem()|| "Arbol AVL"==cmbElegirArbol.getSelectedItem()||"Arbol MVias"==cmbElegirArbol.getSelectedItem()||"Arbol B"==cmbElegirArbol.getSelectedItem()){
        DDiccionario nuevaPalabra = new DDiccionario();
        nuevaPalabra.setIdDiccionario(Integer.parseInt(txtIdDiccionario.getText()));
        nuevaPalabra.setPalabra(txtPalabra.getText().toUpperCase());
        nuevaPalabra.setDescripcion(txtDescripcion.getText().toUpperCase());
        nuevaPalabra.setEjemplo(txtEjemplo.getText().toUpperCase());
        if(validar()){
            if(instancia.insertar(nuevaPalabra)){
                JOptionPane.showMessageDialog(rootPane, "Ingreso al diccionario correctamente");
                mostrar("");
                if("Arbol Binario"==cmbElegirArbol.getSelectedItem()){
                    binario.insertar(nuevaPalabra);
                    mostrar("");
                }
                if("Arbol AVL"==cmbElegirArbol.getSelectedItem()){
                    avl.insertar(nuevaPalabra);
                    mostrar("");
                }
                if("Arbol MVias"==cmbElegirArbol.getSelectedItem()){
                    mvias.insertar(nuevaPalabra);
                    mostrar("");
                }
                if("Arbol B"==cmbElegirArbol.getSelectedItem()){
                    b.insertar(nuevaPalabra);
                    mostrar("");
                }
            }
        }
    }

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        DDiccionario diccionario = new DDiccionario();
        DDiccionario buscar = new DDiccionario();
        diccionario.setIdDiccionario(Integer.parseInt(txtIdDiccionario.getText()));
        diccionario.setPalabra(txtPalabra.getText());
        diccionario.setDescripcion(txtDescripcion.getText());
        diccionario.setEjemplo(txtEjemplo.getText());
        buscar = binario.buscar(diccionario);
        binario.modificar(buscar,diccionario);
        if(validar()){
            if(instancia.editar(diccionario)){
                Connection conexion = con.getConexion();
                try {
                    Statement stm = conexion.createStatement();
                    ResultSet rs = stm.executeQuery("Select* from diccionario");
                    while(rs.next()){
                        dic = new DDiccionario(rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4));
                        binario.insertar(dic);
                        dic = null;
                    }
                } catch (Exception e) {
                    JOptionPane.showConfirmDialog(rootPane, e);
                }
                JOptionPane.showMessageDialog(rootPane, "Se modifico en el diccionario");
                mostrar("");
            }
        }

    }//GEN-LAST:event_btnEditarActionPerformed

    private void txtPalabraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPalabraKeyTyped
        // TODO add your handling code here
    }//GEN-LAST:event_txtPalabraKeyTyped

    private void txtPalabraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPalabraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPalabraActionPerformed

    private void txtPalabraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPalabraKeyReleased
        // TODO add your handling code here:
        convertirAMayusculasJTextField(txtPalabra);
    }//GEN-LAST:event_txtPalabraKeyReleased

    private void txtBuscarPalabraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarPalabraKeyReleased
        // TODO add your handling code here:
        convertirAMayusculasJTextField(txtBuscarPalabra);
    }//GEN-LAST:event_txtBuscarPalabraKeyReleased

    private void txtDescripcionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionKeyReleased
        // TODO add your handling code here:
        convertirAMayusculasJTextArea(txtDescripcion);
    }//GEN-LAST:event_txtDescripcionKeyReleased

    private void txtEjemploKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEjemploKeyReleased
        // TODO add your handling code here:
        convertirAMayusculasJTextArea(txtEjemplo);
    }//GEN-LAST:event_txtEjemploKeyReleased

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        DDiccionario diccionario = new DDiccionario();
        DDiccionario dicc = new DDiccionario();
        dicc.setPalabra(txtBuscarPalabra.getText());
        if("Arbol Binario"==cmbElegirArbol.getSelectedItem()){
                    diccionario = binario.buscar(dicc);
                    instancia.eliminar(diccionario);
                    binario.eliminar(diccionario);
                    mostrar("");
        }
        if("Arbol AVL"==cmbElegirArbol.getSelectedItem()){
                    diccionario = avl.buscar(dicc);
                    instancia.eliminar(diccionario);
                    avl.eliminar(diccionario);
                    mostrar("");
        }
        if("Arbol MVias"==cmbElegirArbol.getSelectedItem()){
                    diccionario = mvias.buscar(dicc);
                    instancia.eliminar(diccionario);
                    mvias.eliminar(diccionario);
                    mostrar("");
        }
        if("Arbol B"==cmbElegirArbol.getSelectedItem()){
                    diccionario = b.buscar(dicc);
                    instancia.eliminar(diccionario);
                    b.eliminar(diccionario);
                    mostrar("");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnSalirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSalirKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            dispose();
        }
    }//GEN-LAST:event_btnSalirKeyPressed

    private void btnSalirKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSalirKeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            dispose();
        }
    }//GEN-LAST:event_btnSalirKeyReleased

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            dispose();
        }
    }//GEN-LAST:event_formKeyPressed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FArboles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FArboles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FArboles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FArboles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FArboles().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCargarArbol;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox cmbElegirArbol;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tbPalabras;
    private javax.swing.JTextField txtBuscarPalabra;
    private javax.swing.JTextArea txtDefinicion;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextArea txtEjemplo;
    private javax.swing.JTextField txtIdDiccionario;
    private javax.swing.JTextField txtPalabra;
    // End of variables declaration//GEN-END:variables
    ArbolBinarioBusqueda<DDiccionario> binario;
    ArbolAVLBusqueda<DDiccionario> avl;
    ArbolMViasBusqueda<DDiccionario> mvias;
    ArbolBBusqueda<DDiccionario> b;
    DataBase con;
    DDiccionario dic;
    LDiccionario instancia;
}
